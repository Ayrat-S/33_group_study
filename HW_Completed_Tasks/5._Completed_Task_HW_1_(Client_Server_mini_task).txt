#client_server
Развернутый ответ на вопрос, своими словами: "Что такое клиент серверная архитектура"?

Клиент-серверная архитектура - это вычислительная сеть, объединяющая удаленные друг от друга устройства, одни из которых отправляют запросы, а другие в свою очередь на 
него отвечают. 
"Клиент" отправляет запрос, а "Сервер" отвечает на его запрос.
Например: 
1) Кто-то со своего смартфона нажал "Скачать фото: 201707151115" с облачного хранилища Google Disk (пошел запрос от "Клиента" на "Сервер") =>  
2) Google Disk нашел его у себя в базе данных и отправил его "Клиенту" (Произошел ответ от "Сервера" на "Клиента").

По сути, и клиент и сервер - это программное обечпечение, установленное на какое-то железо (вычислительная машина), имеющее выход в сеть интернета.
Напрмер, клиент - это смартфоны, персональные компьютеры и т.п.
А сервер - это в большинстве случаев шкафы с ультра-мощными компьютерами и жесткими дисками гигантских объемов.

Так вот, чтобы общаться друг с другом по всему миру по сети интернет, человечество придумало коммутаторы, которые представляют из себя устройство, централизованно получающее 
сообщения от пользователей и отправляющее дальше другому пользователю.

На счет коммутатора - представьте, у вас в офисе десять компьютеров, если бы не существовало клиент-серверной архитектуры, вам бы пришлось от вашего компьютера кидать 
индивидуальный провод к остальным девяти компьютерам. Причем всем остальным компьютерам нужно проделать тоже самое. Посчитайте - сколько проводов для сети у вас получилось 
в этом офисе?
А как тогда объединить все этажи и здания друг с другом в одну сеть? 

Вот для этого человечество придумало коммутатор, к которому в вашем офисе все десять компьютеров подключаются к одной маленькой коробочке - всего через один провод.
А чтобы объединить несколько офисов в одну сеть, нужно их коммутаторы объединить по проводу к одному центральному коммутатору, который расположен например в общем коридоре.
Т.е. если нужно объединить несколько компьютеров в офисе - нужен коммутатор, если нужно объединить несколько офисов - тоже нужен коммутатор.

Итак, проводов в офисах минимум, все компьютеры могут передавать данные, все счастливы. 
Но зачем, например, хранить 10Tb одинаковых файлов на каждом компьютере? Можно ведь эти данные хранить на одном центральном компьютере и скачивать к себе на компьютер по 
мере необходимости.
Такой центральный компьютер в природе существует и называтся он "Сервер". 
А если на "Сервер" поставить мощный процессор и остальное мощное железо, то он еще может на себя взять основные задачи по вычислению. Это говорит о том, что в офисы теперь 
можно покупать менее производительные и недорогие компьютеры. 
Главное, программное обеспечение должно быть написано так, чтобы "Сервер" смог взять на себя основной удар по вычислению и осуществлять хранение-передачи данных со всех 
офисов, а компьютеры в офисах выполняли минимально нужный функционал - такие компьютеры называются "Тонкими клиентами". 
Но если оказалось так, что компьютер в офисе выполняет львиную доли вычислений - такой ПК будет называться "Толстым клиентом".

Ну и, чтобы с вашего офиса получить доступ к интернет сети и написать друзьям в другую страну, вам нужно получить доступ к одному из таких коммутаторов в городе, который 
называется "Провайдер". "Провайдер" в свою очередь отправляет дальше ваше письмо через "Центральный коммутатор вашей страны", который далее пересылает ваши отправленные 
данные на коммутатор называемый "DNS сервер" - имеющий список доменных имен и их адресов, с помощью которого находит конечный адресат - "Сервер" (вычислительную машину: 
смартфон, ПК) и доставляет ему ваше письмо.
Таким образом, клиент-сервреная архитектура представляет из себя глобальную сеть больших и маленьких коммутаторов, которые перемещают запросы от "Клиентов" на "Сервер" и 
обратно отсылают ответ от "Сервера" на "Клиента".

В данном случае полностью раскрывать структуру вычислительных сетей из этих коммутаторов бессмысленно, т.к. это затрагивает слишком объемную и сложную информацию о сетях.
Все-таки задача перед нами такая: 
- Развернутый ответ на вопрос, своими словами: "Что такое клиент серверная архитектура"?

Автор: @Ayrat_Sharifullin
Писал то что сам помню от руки, без копипастов.